@page "/files"
@using HDFConsole.Models
@inject HttpClient Http

<PageTitle>Files</PageTitle>

<h1>Files</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (files == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Filename</th>
                <th>Size (bytes)</th>
                <th>Created</th>
                <th>Last Modified</th>
                <th>Dataset Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var file in files)
            {
                <tr>
                    <td>@file.Filename</td>
                    <td>@file.Size</td>
                    <td>@file.Created</td>
                    <td>@file.LastModified</td>
                    <td>@file.Filename</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private HDFFile[]? files;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            
            //var h = await Http.GetAsync("files/hello");         

            files = await Http.GetFromJsonAsync<HDFFile[]>("files/list");

            
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
            throw;
        }
        
    }


    // protected override async Task OnInitializedAsync()
    // {
    //     // //call external API
    //     // //_httpClient.BaseAddress = new Uri("https://localhost:44312/");


    //     // //your API action would return a collection of Customer
    //     // //you can try to call .GetFromJsonAsync<Customer[]>() to get the expected data
    //     // //rather than get stream
    //     // customers = await _httpClient.GetFromJsonAsync<Customer[]>($"Customer/GetAllCustomers");
    // }
}
